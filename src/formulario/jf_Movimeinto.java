/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import conection.ConectaDb;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import pojos.Movimiento;
import utilitarios.Reportes;
import utilitarios.Tabla;

/**
 *
 * @author Miguel Angel Meca Pacherres <miguelmeca01@gmail.com>
 */
public class jf_Movimeinto extends javax.swing.JFrame {

    /**
     * Creates new form jf_Movimeinto
     */
    List<Movimiento> listaMovimientos;
            
    public jf_Movimeinto() {
        initComponents();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "fecha", "descripcion", "cantidad", "pu", "totalcompra", "cantida", "pu", "toralVenta", "saldo", "total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Reporte");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 938, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(52, 52, 52)
                .addComponent(jButton2)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            URL url = getClass().getResource("/reportes/rp_movimiento.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url);
            JasperPrint jasperPrint = JasperFillManager.fillReport(
                    reporte, 
                    null,
                    new JRBeanCollectionDataSource(listaMovimientos)
            );
            Reportes.visualizaVistaPrevia(jasperPrint);
            //El codigo de abajo es si deseas exportar a pdf
            /*JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte2PDF_2.pdf"));
            exporter.exportReport();*/
        } catch (JRException ex) {
            Logger.getLogger(jf_Movimeinto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        listaMovimientos.clear();
        System.exit(0);
    }//GEN-LAST:event_jButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jf_Movimeinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jf_Movimeinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jf_Movimeinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jf_Movimeinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jf_Movimeinto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    private void inicializar(){
        Tabla.limpiaTabla(jTable1);
        cargarTabla();
    }
    
    private void cargarTabla(){
        try {
            String consulta = "Select * from movimiento where idproducto=1";
            Statement st = ConectaDb.getConnection().createStatement();
            ResultSet rs = st.executeQuery(consulta);
            int cantidad = 0;
            BigDecimal total = BigDecimal.ZERO;
            listaMovimientos = new ArrayList<Movimiento>();
            while(rs.next()){
                String tipoMovimiento = rs.getString(6);
                Movimiento movimiento = new Movimiento();
                if(tipoMovimiento.toLowerCase().equals("compra")){
                    cantidad += rs.getInt(5);
                    BigDecimal totalIngreso = rs.getBigDecimal(8).multiply(new BigDecimal(rs.getInt(5))).setScale(2, RoundingMode.HALF_UP);
                    total = total.add(totalIngreso);
                    Object [] item = {
                    rs.getString(4),
                    tipoMovimiento,
                    rs.getInt(5),
                    rs.getBigDecimal(8),
                    totalIngreso,
                    "",
                    "",
                    "",
                    cantidad,
                    total
                 };
                 Tabla.agregarItemTabla(jTable1, item);
                 movimiento.setFechaMovimiento(rs.getString(4));
                 movimiento.setTipoMovimiento(tipoMovimiento);
                 movimiento.setCantidadIngreso(rs.getInt(5));
                 movimiento.setPrecioIngreso(rs.getBigDecimal(8));
                 movimiento.setTotalIngreso(totalIngreso);
                 movimiento.setCantidadVenta(0);
                 movimiento.setPrecioVenta(BigDecimal.ZERO);
                 movimiento.setTotalVenta(BigDecimal.ZERO);
                 movimiento.setCantidadTotal(cantidad);
                 movimiento.setPrecioTotal(total);
                }else {
                    cantidad -= rs.getInt(5);
                    BigDecimal totalSalida = rs.getBigDecimal(8).multiply(new BigDecimal(rs.getInt(5))).setScale(2, RoundingMode.HALF_UP);
                    total = total.subtract(totalSalida);
                    Object [] item = {
                    rs.getString(4),
                    tipoMovimiento,
                    "",
                    "",
                    "",
                    rs.getInt(5),
                    rs.getBigDecimal(8),
                    totalSalida,
                    cantidad,
                    total
                 };
                 Tabla.agregarItemTabla(jTable1, item);
                 movimiento.setFechaMovimiento(rs.getString(4));
                 movimiento.setTipoMovimiento(tipoMovimiento);
                 movimiento.setCantidadIngreso(0);
                 movimiento.setPrecioIngreso(BigDecimal.ZERO);
                 movimiento.setTotalIngreso(BigDecimal.ZERO);
                 movimiento.setCantidadVenta(rs.getInt(5));
                 movimiento.setPrecioVenta(rs.getBigDecimal(8));
                 movimiento.setTotalVenta(totalSalida);
                 movimiento.setCantidadTotal(cantidad);
                 movimiento.setPrecioTotal(total);
                }
                listaMovimientos.add(movimiento);
            }
        } catch (SQLException ex) {
            Logger.getLogger(jf_Movimeinto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
}
